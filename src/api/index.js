import axios from './config'

export default {
  /* Account */
  getAccount: () => axios.get('/account'),
  getAvatar: () => axios.get('/account/avatar_image'),
  uploadAvatar: params => axios.post('/account/upload_avatar_image', params),
  modifyUserName: params => axios.put('/account/change_username', params),
  sendVerifyCode: params => axios.post('/account/send_va_code', params),
  bindEmail: params => axios.put('/account/bind_email', params),
  bindMobile: params => axios.put('/account/bind_mobile', params),
  getWechatToken: () => axios.get('/account/token'),
  checkBindWechat: () => axios.get('/account/check_weixin'),
  unbindWechat: () => axios.put('/account/unbind_weixin'),
  modifyPassword: params => axios.put('/account/change_password', params),
  getLoginInfo: (params = {}) => axios.get('/account/login', {params}),
  login: params => axios.post('/account/login', params),
  logout: () => axios.get('/account/logout'),
  sendResetCode: params => axios.post('/account/send_reset_code', params),
  resetPassword: data => axios.post('/account/reset_password', data),
  sendRegistCode: params => axios.post('/account/send_regist_mobile_code', params),
  sendEmailValidate: params => axios.post('/account/resend_regist_email_validate', params),
  regist: params => axios.post('/account/regist', params),
  /* Dashbord */
  getSiteList: () => axios.get('/dashboard'),
  getSitePv: params => axios.get('/dashboard/statistic', {params}),
  ingoreAlarm: id => axios.put('/dashboard/ingore_alarm', id),
  ingoreNotice: id => axios.post('/dashboard/ingore_notice', id),
  hiddenSite: params => axios.put('/dashboard/hidden_store', params),
  removeDomain: params => axios.post('/dashboard/domain_remove', params),
  removeManage: params => axios.put('/dashboard/remove_manage', params),
  revertDomain: params => axios.post('/dashboard/revert_domain', params),
  /* Service */
  getStoreInfo: params => axios.get('/service/store_info', {params}),
  getServiceFee: params => axios.post('/service/get_fee', params),
  getPlanPrice: params => axios.get('/service/plan_price', {params}),
  getSmsPrice: params => axios.get('/service/sms_price', {params}),
  getEmailPrice: params => axios.get('/service/email_price', {params}),
  getStoragePrice: params => axios.get('/service/storage_price', {params}),
  getServiceInfo: () => axios.get('/service'),
  getCreateFee: params => axios.post('/service/get_create_fee', params),
  goRenew: params => axios.post('/service/renew_store', params),
  goLevelup: params => axios.post('/service/levelup_store', params),
  goSms: params => axios.post('/service/buy_sms', params),
  goEmail: params => axios.post('/service/buy_email', params),
  goStorage: params => axios.post('/service/buy_storage', params),
  checkDiscount: params => axios.post('/service/check_discount', params),
  getCreateInfo: params => axios.get('/service/create_store', {params}),
  getPayTypes: () => axios.get('/service/payment_method'),
  getLevelPlans: params => axios.get('/service/can_levelup_code', {params}),
  getProjectInfo: params => axios.get('/service/project', {params}),
  createProject: params => axios.post('/service/project', params),
  checkDomain: params => axios.post('/service/check_domain', params),
  createStore: params => axios.post('/service/create_store', params),
  serviceMiddleStep: params => axios.get('/service/success', {params}),
  /* Install */
  initCreateData: guid => axios.get('/install/trial/' + guid),
  goCreateSite: (guid, params) => axios.post('/install/trial/' + guid, params),
  installStep: (guid, step) => axios.post('/install/state/' + guid + '/step/' + step),
  installCheckStatus: guid => axios.get('/install/done/' + guid),
  getInstallStore: siteId => axios.get('/install/begin/' + siteId),
  reInstall: guid => axios.post('/install/retry/' + guid),
  recommendName: () => axios.get('/install/recommend_name'),
  /* Balance */
  getBalance: () => axios.get('/balance'),
  getBalanceList: params => axios.get('/balance/balance_list', {params}),
  getBalanceSuccessTradeList: () => axios.get('/balance/success_trade_list'),
  lastInvoice: params => axios.get('/balance/last_invoice'),
  getInvoice: id => axios.get('/balance/invoice', {params: {id}}),
  postInvoice: params => axios.post('/balance/invoice', params),
  getInvoiceList: () => axios.get('/balance/invoices'),
  deleteInvoice: params => axios.delete('/balance/delete_invoice', {params}),
  getCouponList: () => axios.get('/balance/coupon_list'),
  getUnsettleList: () => axios.get('/balance/unsettle_list'),
  getUnsettDetail: params => axios.get('/balance/unsettle_detail', {params}),
  getSettleList: params => axios.get('/balance/settle_list', {params}),
  getSettDetail: params => axios.get('/balance/settle_detail', {params}),
  getRechargeList: params => axios.get('/balance/recharge_list', {params}),
  getApplyList: params => axios.get('/balance/apply_list', {params}),
  getBankCards: () => axios.get('/balance/bank_cards'),
  getYeeBanks: () => axios.get('/balance/yee_banks'),
  createBankCard: params => axios.post('/balance/bank_card', params),
  updateBankCard: (id, params) => axios.put('/balance/bank_card/' + id, params),
  deleteBankCard: id => axios.delete('/balance/bank_card', {params: {id}}),
  sendApplyCode: () => axios.post('/balance/send_apply_code'),
  doApply: params => axios.post('/balance/do_apply', params),
  accountRecharge: params => {
    let data = new FormData()
    Object.keys(params).forEach(key => data.append(key, params[key]))
    return axios.post('/service/account_recharge', data)
  },
  /* domain */
  getDomainall: () => axios.get('/domain'),
  getDomainDetail: id => axios.get('/domain/detail/' + id),
  getBindWebsit: id => axios.get('/domain/quick_bind_form', {params: {id}}),
  getRecordData: id => axios.get('/domain/record_list/' + id),
  refreshRecordListData: (domainId, recordId) => axios.get('/domain/refresh_record', {params: {account_domain_id: domainId, record_id: recordId}}),
  deleteRecordData: id => axios.delete('/domain/delete_record', {params: {id}}),
  domainCreateRecord: params => axios.post('/domain/create_record', params),
  domainEditRecord: params => axios.post('/domain/edit_record', params),
  domainQuickBind: params => axios.post('/domain/quick_bind', params),
  getCertificateStatus: id => axios.get('/domain/certificate/' + id),
  submitCertificate: (id, params, header) => axios.post('/domain/certificate/' + id, params, header),
  submitEnterpriseEmail: params => axios.post('/domain/enterprise_email', params),
  domainTransferDomain: params => axios.post('/domain/transfer_domain', params),
}

